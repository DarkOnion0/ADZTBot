# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

before_script:
  - python --version
  - pip install -r requirements.txt

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - python -m pip install --upgrade pip
  - pip install virtualenv flake8 pytest rich cx_Freeze
  - virtualenv venv
  - source venv/bin/activate

Linting:
  script:
    - flake8 main.py lib/db.py --count --select=E9,F63,F7,F82 --show-source --statistics
    - flake8 main.py lib/db.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

Testing:
    script:
        - python

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - python -m pip install --upgrade pip
  - pip install virtualenv flake8 pytest
  - virtualenv venv
  - source venv/bin/activate

Linting:
  script:
    - flake8  main.py lib/db.py --count --select=E9,F63,F7,F82 --show-source --statistics
    - flake8 main.py lib/db.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

Testing:
  script:
    - python


